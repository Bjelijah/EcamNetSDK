apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }


    useLibrary 'org.apache.http.legacy'

    packagingOptions{
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/ASL2.0'
    }

    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
        }
    }


}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    compile files('libs/jackson-core-asl-1.9.7.jar')
    compile files('libs/jackson-mapper-asl-1.9.7.jar')
}


task clearJar(type:Delete){
    delete 'build/libs/eCamSDK.jar'
}


task makeJar(type:Copy){
    from('build/intermediates/bundles/debug/')
    into('build/outputs/jar/')
    include('classes.jar')
    rename('classes.jar','eCamSDK.jar')
}

//task makeJar(type:proguard.gradle.ProGuardTask,dependsOn:"build"){
//    delete 'build/outputs/jar/eCamSDK.jar'
//    injars 'build/intermediates/bundles/debug/classes.jar'
//    outjars 'build/outputs/jar/eCamSDK.jar'
//    configuration 'proguard-rules.pro'
//}

makeJar.dependsOn(clearJar,build)